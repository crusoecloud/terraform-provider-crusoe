name: semver tag

on:
  push:
    branches:
      - release

permissions:
  contents: write

jobs:
  semver-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "crusoe-cloud"
          git config user.email "support@crusoecloud.com"

      - name: Load versions from text file
        run: |
          source versions.env
          echo "MAJOR_VERSION=${MAJOR_VERSION}" >> $GITHUB_ENV
          echo "MINOR_VERSION=${MINOR_VERSION}" >> $GITHUB_ENV

      - name: Calculate and set new version
        run: |
          chmod +x ./scripts/tag_semver.sh
          ./scripts/tag_semver.sh $MAJOR_VERSION $MINOR_VERSION ""
        shell: bash

      - name: Read version and push tag
        run: |
          source variables.env
          echo "Calculated version: $RELEASE_VERSION"
          source variables.env
          git tag $RELEASE_VERSION
          git push origin $RELEASE_VERSION

  goreleaser:
    needs: semver-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@72b6676b71ab476b77e676928516f6982eef7a41 # v5.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b # v4.2.0
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
